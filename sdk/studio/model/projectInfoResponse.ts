/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DevelopmentKeys } from './developmentKeys';
import { Device } from './device';
import { Download } from './download';
import { GenericApiResponse } from './genericApiResponse';
import { Project } from './project';
import { ProjectDataSummary } from './projectDataSummary';
import { ProjectInfoResponseAllOf } from './projectInfoResponseAllOf';
import { ProjectInfoResponseAllOfComputeTime } from './projectInfoResponseAllOfComputeTime';
import { ProjectInfoResponseAllOfImpulse } from './projectInfoResponseAllOfImpulse';
import { User } from './user';

export class ProjectInfoResponse {
    /**
    * Whether the operation succeeded
    */
    'success': boolean;
    /**
    * Optional error description (set if \'success\' was false)
    */
    'error'?: string;
    'project': Project;
    'collaborators': Array<User>;
    'downloads': Array<Download>;
    'developmentKeys': DevelopmentKeys;
    'impulse': ProjectInfoResponseAllOfImpulse;
    'devices': Array<Device>;
    'dataSummary': ProjectDataSummary;
    /**
    * Summary of the amount of data (in ms.) per sensor axis
    */
    'dataAxisSummary': { [key: string]: number; };
    /**
    * The suggested interval for new sampling data. This is based on the existing data in your training set.
    */
    'suggestedSamplingInterval': number;
    'computeTime': ProjectInfoResponseAllOfComputeTime;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "success",
            "baseName": "success",
            "type": "boolean"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string"
        },
        {
            "name": "project",
            "baseName": "project",
            "type": "Project"
        },
        {
            "name": "collaborators",
            "baseName": "collaborators",
            "type": "Array<User>"
        },
        {
            "name": "downloads",
            "baseName": "downloads",
            "type": "Array<Download>"
        },
        {
            "name": "developmentKeys",
            "baseName": "developmentKeys",
            "type": "DevelopmentKeys"
        },
        {
            "name": "impulse",
            "baseName": "impulse",
            "type": "ProjectInfoResponseAllOfImpulse"
        },
        {
            "name": "devices",
            "baseName": "devices",
            "type": "Array<Device>"
        },
        {
            "name": "dataSummary",
            "baseName": "dataSummary",
            "type": "ProjectDataSummary"
        },
        {
            "name": "dataAxisSummary",
            "baseName": "dataAxisSummary",
            "type": "{ [key: string]: number; }"
        },
        {
            "name": "suggestedSamplingInterval",
            "baseName": "suggestedSamplingInterval",
            "type": "number"
        },
        {
            "name": "computeTime",
            "baseName": "computeTime",
            "type": "ProjectInfoResponseAllOfComputeTime"
        }    ];

    static getAttributeTypeMap() {
        return ProjectInfoResponse.attributeTypeMap;
    }
}

